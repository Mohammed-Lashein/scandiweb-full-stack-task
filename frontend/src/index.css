* {
  box-sizing: border-box;
  font-family: "raleway", sans-serif;
  /* I have to note that after trial,  writing the font family
  starting with a capital or small letter doesn't matter . The font 
  will take effect anyway . */
}

body {
  margin: 0;
  padding: 0;
}

a {
  color: black;
  text-decoration: none;
}

:root {  
  --fw-light: 300;
  --fw-regular: 400;
  --fw-medium: 500;
  --fw-semiBold: 600;
  --fw-bold: 700;

  --ff-roboto: "Roboto", sans-serif;

  /*18px*/
  --fs-100: 1.125rem;
  /*24px*/
  --fs-200: 1.5rem;
  /*30px*/
  --fs-300: 1.875rem;
  /*42px*/
  --fs-400: 2.625rem;

  --padding-1: 1rem;
  --padding-2: 2rem;
  --padding-3: 3rem;

  --margin-1: 1rem;
  --margin-2: 2rem;
  --margin-3: 3rem;


  --gap-1: 1rem;
  --gap-2: 2rem;

  --clr-primary: #5ECE7B;
  --clr-primary-dark: #457a53;
  --transition: all 0.2s ease-in-out;
}

/* general styles */
ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

/* navbar */
.navbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--padding);
  position: relative;
  flex-wrap: wrap;
  padding: var(--padding-2) var(--padding-3);
}

/* .navbar .logo {
  position: absolute;
    left: 50%;
    transform: translateX(-50%);
} */

.navbar {
  display: grid;
  grid-template-columns: 2fr 1fr 1fr;
  grid-template-columns: repeat(3, minmax(auto, 1fr));
  gap: var(--gap-1);
  margin: auto;
}

.navbar * {
  display: flex;
  justify-content: center;
  align-items: flex-start;
}
.navbar__cart-icon-inner-container {
  position: relative;

}
.navbar__cart-icon-container__cart-icon {
  cursor: pointer;
  background: none;
  border: none;
}
.navbar__cart-icon-container__products-count-bubble {
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  color: white;
  background-color: black;
  top: -10px;
  right: -5px;
  padding-bottom: 0.2rem;
  /* The padding bottom is important so that the productsCount is visually centered within the bubble .  */
}

/* tabs */
.tabs {
  display: flex;
  gap: var(--gap-1);
}

.tabs li {
  padding-bottom: var(--padding-2);
  cursor: pointer;
  text-transform: capitalize;

}

.tabs li.active {
  color: var(--clr-primary);
  border-bottom: 3px solid var(--clr-primary);
  transition: var(--transition);
  transition-property: color;
  /* since the transition if applied to the border causes a weird jump
  in the UI, explicitly setting the transition property is a much better
  approach, where we didn't need to define our custom transition and
  used the global transition variable (so that maintainability is much
  easier) and were also able to achieve the required target . */
}

.product__description {
  font-family: var(--ff-roboto);
  font-weight: var(--fw-product-description);
}

/* category name */
.category-name {
  padding-left: var(--padding-2);
  text-transform: capitalize;
}

/* products */
.products-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(200px, auto));
  justify-content: center;
  /* 
  Note that here justify-content deals with the columns of the grid and
  not the children themselves as in flexbox.

  This property is important so that the products adapt to different
  screen sizes, and to be shown in a centered look on mobile devices
  */
  margin: var(--margin-3);
  column-gap: var(--gap-2);
  row-gap: var(--gap-1);
}

.product-card {
  width: 200px;
  min-height: 300px;
  padding: var(--padding-1);
  transition: box-shadow 0.3s linear;
}

.product-card:hover {
  box-shadow: 5px 5px 5px rgb(174, 172, 172);
}

.product-card__img-container {
  position: relative;
}

.product-card__img-container__img {
  width: 100%;
  height: 200px;
  object-fit: contain;
  /* space below it is 24px (1.5rem) // 24 / 16 */
}

/* Till we reach the next working class, all of the commented code 
below is for the cart icon in the ProductCard component that I 
didn't implement . My concerns are written in the 
design-decisions.txt file .   */
/* .product-card__img-container__cart-icon {
  width: 40px;
  height: 40px;
  border-radius: 50%;

   // color: white;
   // since we are using an svg, changing the color here won't work 

  background-color: var(--clr-primary);
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  bottom: 10px;
  right: 0;
  cursor: pointer;
  transition: all 0.3s linear;
  visibility: hidden;

} */


/* .product-card:hover .product-card__img-container__cart-icon {
  visibility: visible;
}
.product-card__img-container__cart-icon:hover {
  background-color: var(--clr-primary-dark);
} */

.product-card__details__product-description {
  font-weight: var(--fw-light);
  font-size: var(--fs-100);
  margin: 0;
}

.product-card__details__product-price {
  font-weight: var(--fw-medium);
  font-size: var(--fs-100);
  margin-top: 0.3rem;
}

/* product page */

.product-details-container {
  padding: var(--padding-2);
  display: flex;
  flex-wrap: wrap;
  gap: 8rem;
}

.product-details-container__carousel-outer-container {
  display: flex;
  gap: 4rem;
  /* half the gap of the product-details-container . This effect is 
  appearing in the design .  */
  flex-wrap: wrap;
}

.product-details-container__carousel-outer-container__imgs-container {
  display: flex;
  flex-direction: column;
  gap: var(--gap-1);
}

.product-details-container__carousel-outer-container__imgs-container__image img {
  width: 100px;
  height: 100px;
  cursor: pointer;
}

.product-details-container__carousel-outer-container__imgs-container__image.active {
  border: 1px solid black;
}

.product-details-container__carousel-outer-container__image-container img {
  width: 400px;
  height: 400px;
  object-fit: contain;
}

/* arrow left and arrow right stylings add them here */

.product-details-container__carousel-outer-container__image-container {
  position: relative;
  align-self: flex-start;
  /* aliging the image container to the beginning of the flexbox is 
  very important as this will affect the appearance of the carousel 
  arrows . Since by default the image container stretched to have same
  height as the vertical carousel, this would affect the placing of the
  arrows when we do the dimensions calculations */
}

.right-arrow,
.left-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  outline: none;
  border: none;
  background-color: transparent;
  cursor: pointer;
}

.right-arrow img,
.left-arrow img {
  width: 30px;
  height: 30px;
}

.right-arrow {
  right: 0;
}

.left-arrow {
  left: 0;
}

.product-details-container__product-description-container {
  display: flex;
  flex-direction: column;
  gap: var(--gap);
}

.product-details-container__product-description-container header {
  font-weight: var(--fw-semiBold);
  font-size: var(--fs-300);
  text-transform: capitalize;
}

.product-details-container__product-description-container .product-details-label {
  font-family: var(--ff-roboto-condensed);
  font-weight: var(--fw-bold);
  font-size: var(--fs-100);
  text-transform: uppercase;
  margin: 0.5rem 0;
}

.product-details-container__product-description-container__product-size ul {
  display: flex;
  gap: 0.3rem;
}

.product-details-container__product-description-container__product-size ul li,
.product-details-container__product-description-container__product-size ul li.active {
  padding: 0.5rem var(--padding-1);
  border: 1px solid #292929;
  color: #292929;
  /* Use that color instead of just black as it is lighter than black */
  transition: var(--transition);
  text-align: center;
  cursor: pointer;
}

.product-details-container__product-description-container__product-size ul li:hover,
.product-details-container__product-description-container__product-size ul li.active {
  color: white;
  background-color: #292929;
}


.product-details-container__product-description-container__product-color ul {
  display: flex;
  gap: 0.3rem;
}

.product-details-container__product-description-container__product-color ul li {
  width: 30px;
  height: 30px;
  border: 1px solid black;
  cursor: pointer;
}

.product-details-container__product-description-container__product-color ul li.active {
  border: none;
  outline: 2px solid var(--clr-primary);
  /* border: 2px solid var(--clr-primary); */
  /* using the outline property here is a better design decision since 
  that in the figma file, the focus on the color is not inside the 
  element's border but instead outside the element .  */

}

.product-details-container__product-description-container__product-price .product-price {
  font-size: var(--fs-200);
  font-weight: var(--fw-bold);
  margin: 0;
  /* This element has a margin of 24px but I don't know where it did 
  come from, so I will modify it here manually till I find its origin
  in the css file  */
}


.product-details-container__product-description-container button,
button.place-order-btn {
  color: white;
  background-color: var(--clr-primary);
  transition: background-color 0.2s linear;
  /* width: 50px; */
  padding: 15px 20px;
  text-transform: uppercase;
  font-weight: var(--fw-semiBold);
  border: 1px solid var(--clr-primary);
  cursor: pointer;
}

.product-details-container__product-description-container button:hover,
.place-order-btn:hover {
  color: var(--clr-primary);
  background-color: white;
  border: 1px solid var(--clr-primary);
}

/* cart */

.cart-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  background-color: white;
  width: 400px;
  height: 500px;
  overflow: scroll;
  z-index: 5;
  padding: 1rem;
  position: absolute;
  right: 10%;
}

@media screen and (max-width: 600px) {
  .cart-container {
    right: 0;
    left: 0;
    top: 1%;
  }
}

.cart-container__product-container {
  display: flex;
  gap: 0.5rem;
}
@media screen and (max-width: 600px) {

  .cart-container__product-container {
    border-top: 1px solid black;
    padding: 1rem 0;
  }
  
}

.cart-container__product-container__product-info-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.cart-container__product-container__product-info-container__product-price {
  font-weight: var(--fw-medium);
  margin: 0;
}

.cart-container__product-container__qty-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
}

.increment-qty,
.decrement-qty {
  padding: 0.5rem var(--padding-1);
  border: 1px solid #292929;
  color: #292929;
  /* Use that color instead of just black as it is lighter than black */
  transition: var(--transition);
  text-align: center;
  cursor: pointer;
  background: none;
  font-size: var(--fs-200);
}

.increment-qty:hover,
.decrement-qty:hover {
  color: white;
  background-color: #292929;
}

/* cart modal */
.cart-modal-container {
  position: absolute;
  width: 100vw;
  height: 100vh;
  background-color: rgba(57, 55, 72, 0.3);
  z-index: 5;
}

.cart-container__product-container__qty-container__qty-value {
  font-weight: var(--fw-bold);
}

.cart-container__product-container__product-info-container__product-img {
  width: 100px;
  height: 100px;
  object-fit: contain;
  align-self: center;
}

.cart-container__product-container__total-price-container {
  display: flex;
  justify-content: space-between;
}

.cart-container__product-container__total-price-container p {
  font-weight: var(--fw-bold);
}